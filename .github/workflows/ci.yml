name: CI

# Declare default permissions as read only.
permissions: read-all

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  inspect-code:
    name: Inspect code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 18
      - name: Setup cache for Chromium binary
        uses: actions/cache@v3
        with:
          path: .local-chromium
          key: ${{ runner.os }}-chromium-${{ hashFiles('src/revisions.ts') }}
      - name: Install dependencies
        run: npm ci
      - name: Check code
        run: npm run check
      - name: Lint code
        run: npm run lint
      - name: Lint commits
        run: npm run commitlint
        if: github.event_name != 'pull_request'

  check-docs:
    name: Check documentation
    runs-on: ubuntu-latest
    outputs:
      needs_deploying: ${{ steps.needs_deploying.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
      - name: Setup cache for Chromium binary
        uses: actions/cache@v3
        with:
          max_attempts: 1
          command: npm run test:unit:chrome-headless
          timeout_minutes: 30

  docker-checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Set up Node.js
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: |
          npm install
          ls .local-chromium
      - name: Build
        run: |
          npm run build
          docker/pack.sh
      - name: Build docker image
        working-directory: ./docker
        run: |
          docker build -t puppeteer-test-image .
      - name: Run smoke test
        working-directory: ./docker
        run: |
          docker run -i --init --cap-add=SYS_ADMIN --rm puppeteer-test-image node -e "`cat test/smoke-test.js`"
